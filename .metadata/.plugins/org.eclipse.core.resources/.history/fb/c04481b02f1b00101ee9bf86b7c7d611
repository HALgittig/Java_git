package LogAnalysis_Jenkins;

import java.io.File;
import java.io.IOException;

public class Main {
    public static void main(String[] args) {
        if (args.length < 1) {
            System.out.println(" ログフォルダのパスを引数で指定してください。");
            System.out.println("例: java -cp src Main C:\\logs");
            return;
        }

        File logDir = new File(args[0]);
        if (!logDir.exists() || !logDir.isDirectory()) {
            System.err.println(" 指定されたパスは存在しないか、ディレクトリではありません: " + logDir.getAbsolutePath());
            return;
        }

        String webhookUrl = "https://discord.com/api/webhooks/1361910822225449070/gqw9y635H_jCcX4RhVyjj8iwMlRnIirqrr8TnHiR5K_Q2rIeJYePzjNv3QuF9EUPYUhl"; // あなたのWebhook URLに置き換えてください

        File[] logFiles = logDir.listFiles((dir, name) -> name.endsWith(".txt") || name.endsWith(".log"));
        if (logFiles == null || logFiles.length == 0) {
            System.out.println(" 処理対象のログファイルが見つかりません。");
            return;
        }

        for (File logFile : logFiles) {
            System.out.println(" 解析中: " + logFile.getName());
            File outputFile = new File(logDir, "summary_" + logFile.getName());

            JenkinsLogAnalyzer analyzer = new JenkinsLogAnalyzer();
            try {
                analyzer.analyzeLog(logFile);
                analyzer.writeSummary(outputFile);
                DiscordWebhookSender.sendFileToDiscord(webhookUrl, outputFile);
                System.out.println(" " + logFile.getName() + " → 送信完了");
            } catch (IOException e) {
                System.err.println("❌ エラー発生: " + logFile.getName());
                e.printStackTrace();
            }
        }

        System.out.println(" 全てのログファイルの処理が完了しました");
    }
}

